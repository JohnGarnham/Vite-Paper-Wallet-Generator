{"version":3,"sources":["helper.js","App.js","reportWebVitals.js","index.js"],"names":["__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spreadArray","to","from","il","length","j","Object","defineProperty","exports","isHexString","searchAddresses","generateAddressFromSeed","generateRandomSeed","vitejs_1","require","getRandomValues","isMatch","address","use_prefix","prefix","use_suffix","suffix","addr","substring","startsWith","toLowerCase","endsWith","buf2hex","buffer","Uint8Array","map","x","toString","padStart","join","array","seed","keyPair","wallet","deriveKeyPairByIndex","createAddressByPrivateKey","privateKey","count","output","publicKey","originalAddress","str","test","PaperWalletGeneratorForm","props","initSeed","initAddress","state","event","target","console","log","JSON","stringify","setState","search","iterations","result","qrCodes","document","getElementById","printWindow","window","open","write","innerHTML","focus","onload","print","className","type","id","name","onChange","handleSeedChange","bind","readOnly","onClick","generateSeed","printQRCodes","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.abaecabc.chunk.js","sourcesContent":["\"use strict\";\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isHexString = exports.searchAddresses = exports.generateAddressFromSeed = exports.generateRandomSeed = void 0;\r\nvar vitejs_1 = require(\"@vite/vitejs\");\r\nvar getRandomValues = require('get-random-values');\r\n// Returns true if address matches our criteria\r\nfunction isMatch(address, use_prefix, prefix, use_suffix, suffix) {\r\n    // Chop off vite_\r\n    var addr = address.substring(5);\r\n    // Check matching prefix \r\n    if (use_prefix) {\r\n        // Fail on null or empty string\r\n        if (prefix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.startsWith(prefix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // Check matching suffix\r\n    if (use_suffix) {\r\n        // Fail on null or empty string\r\n        if (suffix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.endsWith(suffix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // If you reached here, you've won! :)\r\n    return true;\r\n}\r\n// Generate a random seed\r\nfunction generateRandomSeed() {\r\n    // Generate random 32 byte seed\r\n    var array = new Uint8Array(32);\r\n    getRandomValues(array);\r\n    // Generate randomized hex string for seed\r\n    var seed = buf2hex(array.buffer);\r\n    return seed;\r\n}\r\nexports.generateRandomSeed = generateRandomSeed;\r\n// Generate a random seed\r\nfunction generateAddressFromSeed(seed) {\r\n    // Generate an address\r\n    var index = 0;\r\n    var keyPair = vitejs_1.wallet.deriveKeyPairByIndex(seed, index);\r\n    var address = vitejs_1.wallet.createAddressByPrivateKey(keyPair.privateKey);\r\n    return address;\r\n}\r\nexports.generateAddressFromSeed = generateAddressFromSeed;\r\n// Generate count Vite address and search for prefix or suffix \r\nfunction searchAddresses(use_prefix, prefix, use_suffix, suffix, count) {\r\n    // Construct output string from matching addresses\r\n    var output = \"\";\r\n    // Iterate thru count addresses\r\n    for (var i = 0; i < count; i++) {\r\n        // Generate random 32 byte seed\r\n        var array = new Uint8Array(32);\r\n        getRandomValues(array);\r\n        // Generate randomized hex string for seed\r\n        var seed = buf2hex(array.buffer);\r\n        // Generate an address\r\n        var index = 0;\r\n        var keyPair = vitejs_1.wallet.deriveKeyPairByIndex(seed, index);\r\n        var address = vitejs_1.wallet.createAddressByPrivateKey(keyPair.privateKey);\r\n        // Check if generated address matches criteria\r\n        if (isMatch(address.address, use_prefix, prefix, use_suffix, suffix)) {\r\n            var addressInfo = \"Address: \" + address.address + \"\\n\" +\r\n                \"Seed: \" + seed + \"\\n\" +\r\n                \"Private Key: \" + address.privateKey + \"\\n\" +\r\n                \"Public Key: \" + address.publicKey + \"\\n\" +\r\n                \"Original Address: \" + address.originalAddress + \"\\n\\n\";\r\n            output += addressInfo;\r\n        }\r\n    }\r\n    // Return output string\r\n    return output;\r\n}\r\nexports.searchAddresses = searchAddresses;\r\n// Returns whether or not str is valid hex string\r\nfunction isHexString(str) {\r\n    var re = /^([0-9A-Fa-f])*$/;\r\n    return (re.test(str));\r\n}\r\nexports.isHexString = isHexString;\r\n// Convert buffer to hex string\r\nfunction buf2hex(buffer) {\r\n    return __spreadArray([], __read(new Uint8Array(buffer))).map(function (x) { return x.toString(16).padStart(2, '0'); }) // Convert to hex, pad with 0\r\n        .join('');\r\n}\r\n","import './App.css';\r\nimport React from 'react' ;\r\nimport QRCode from \"react-qr-code\";\r\n\r\nimport {generateRandomSeed, generateAddressFromSeed, AddressObj} from './helper'\r\n\r\nconst DEFAULT_ITERATIONS = 1000;\r\n\r\nexport default class PaperWalletGeneratorForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initialize values\r\n    const initSeed = generateRandomSeed();\r\n    const initAddress = generateAddressFromSeed(initSeed);\r\n\r\n    // Define state\r\n    this.state = {\r\n        seed: initSeed,\r\n        address: initAddress.address,\r\n        publicKey: initAddress.publicKey,\r\n        privateKey: initAddress.privateKey\r\n      };\r\n      \r\n  }\r\n\r\n  // Text in seed textfield modified\r\n  handleSeedChange(event) {\r\n    // Grab seed\r\n    var state= this.state;\r\n    var seed  = event.target.value;\r\n    state.seed = seed;\r\n    // Generate address from seed\r\n    const initAddress = generateAddressFromSeed(seed);\r\n    // Update state\r\n    state.address = initAddress.address;\r\n    state.publicKey = initAddress.publicKey;\r\n    state.privateKey = initAddress.privateKey;\r\n    // Log state value for debug\r\n    console.log(JSON.stringify(state));\r\n    // Update state\r\n    this.setState({ state: state });\r\n  }\r\n\r\n  // Reset all values\r\n  reset(event) {\r\n    // Set all search terms to their defaults\r\n    var search = this.state.search;\r\n    search.prefix = \"\";\r\n    search.suffix = \"\";\r\n    search.use_prefix = false;\r\n    search.use_suffix = false;\r\n    search.iterations = DEFAULT_ITERATIONS;\r\n    this.setState({ search: search });\r\n    // Clear output\r\n    var result = this.state.result;\r\n    result.output= \"\";\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  // Generate new random seed\r\n  generateSeed(event) {\r\n    const seed = generateRandomSeed();\r\n    console.log(\"Seed is \", seed)\r\n    // Set the result of the search\r\n    var state = this.state;\r\n    state.seed = seed;\r\n    // Generate address from seed\r\n    const initAddress = generateAddressFromSeed(seed);\r\n    // Update state\r\n    state.address = initAddress.address;\r\n    state.publicKey = initAddress.publicKey;\r\n    state.privateKey = initAddress.privateKey;\r\n    // Log state value for debug\r\n    console.log(JSON.stringify(state));\r\n    // Update state\r\n    this.setState({ state : state });\r\n  }\r\n\r\n  // Print QR codes\r\n  printQRCodes(event) {\r\n    // Grab output-area\r\n    var qrCodes = document.getElementById(\"output-area\");\r\n    // Create a Print popup\r\n    var printWindow = window.open('', 'QR Code', 'left=0,top=0,width=800,height=900,toolbar=0,scrollbars=0');\r\n    printWindow.document.write('<html><head><title>Print QR Codes</title>');\r\n    printWindow.document.write('<link rel=\"stylesheet\" type=\"text/css\" href=\"./App.css\"/>');\r\n    printWindow.document.write('</head><body >');\r\n    printWindow.document.write(qrCodes.innerHTML);\r\n    printWindow.document.write('</body></html>');\r\n   \r\n    printWindow.focus();\r\n    printWindow.onload = function() {\r\n      printWindow.print();\r\n    };\r\n    printWindow.print();\r\n  \r\n  }\r\n\r\n  render() {\r\n  return (\r\n      <div className=\"root\">\r\n        <div className=\"header\">\r\n          <h2>Vite Paper Wallet Generator</h2>\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <div className=\"input-text-row\"> \r\n            <label className=\"input-label\">Seed:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"seed\" name=\"seed\" \r\n              value={this.state.seed} onChange={this.handleSeedChange.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <label className=\"input-label\">Address:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"address\" name=\"address\" \r\n                value={this.state.address} readOnly />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <label className=\"input-label\">Public Key:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"publicKey\" name=\"publicKey\" \r\n                value={this.state.publicKey} readOnly />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <label className=\"input-label\">Private Key:</label>\r\n            <input type=\"text\" className=\"text-input-long\" id=\"privateKey\" name=\"privateKey\" \r\n                value={this.state.privateKey} readOnly />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-button-row\">\r\n          <button type=\"button\" className=\"input-button\" name=\"Generate\" onClick={this.generateSeed.bind(this)}>\r\n            Generate New\r\n          </button>\r\n          <button type=\"button\" className=\"input-button\" name=\"Print\" onClick={this.printQRCodes.bind(this)}>\r\n            Download\r\n          </button>\r\n        </div>\r\n        <div className=\"output-area\" id=\"output-area\" name=\"output-area\">\r\n          <div className=\"output-label-row\">\r\n            <label className=\"seed-label\">Seed:</label>\r\n            <label className=\"address-label\">Address:</label>\r\n          </div>\r\n          <div className=\"output-row\">\r\n            <QRCode value={this.state.seed} className=\"qr-code\"/>\r\n            <QRCode value={this.state.address} className=\"qr-code\"/>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          Email: <a className=\"footer-link\" href=\"mailto:john.e.garnham@gmail.com\">john.e.garnham@gmail.com</a> \r\n          Twitter: <a className=\"footer-link\"  href=\"https://twitter.com/ViNoDevErik\">ViNoDevErik</a>\r\n          Source: <a className=\"footer-link\"  href=\"https://github.com/JohnGarnham/Vite-Paper-Wallet-Generator\">\r\n          https://github.com/JohnGarnham/Vite-Paper-Wallet-Generator\r\n            </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n  <title> Paper Wallet Generator </title>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}